---
import { Menu } from 'lucide-react';
import { Button } from '@/components/ui/button';

const currentPath = new URL(Astro.request.url).pathname;

function isCurrentPage(path: string): boolean {
  if (path === '/' && currentPath === '/') return true;
  if (path !== '/' && currentPath.startsWith(path)) return true;
  return false;
}

const navItems = [
  { href: '/', label: 'Home' },
  { href: '/posts', label: 'Posts' },
  { href: '/projects', label: 'Cool Stuff' },
  { href: '/about', label: 'About' },
];
---

<nav class="border-b">
  <div class="container mx-auto px-4 py-6 max-w-5xl">
    <div class="flex justify-between items-center">
      <a href="/" class="hover:opacity-90 transition-opacity">
        <img 
          src="/images/creatorHome_logo.svg"
          alt="Creator Home Logo" 
          class="h-8"
          height="32"
          width="auto"
        />
      </a>
      
      <!-- Desktop Menu -->
      <div class="hidden md:flex gap-6">
        {navItems.map(({ href, label }) => (
          <a 
            href={href}
            class={`
              relative text-sm font-medium py-1
              ${isCurrentPage(href) 
                ? 'text-primary hover:text-primary/90'
                : 'text-muted-foreground hover:text-primary'
              }
              before:absolute before:inset-x-0 before:bottom-0 before:h-0.5
              before:bg-primary before:origin-left before:scale-x-0
              before:transition-transform before:duration-300 before:ease-out
              hover:before:scale-x-100
              ${isCurrentPage(href) ? 'before:scale-x-100' : ''}
            `}
          >
            {label}
          </a>
        ))}
      </div>

      <!-- Mobile Menu Button -->
      <Button 
        variant="ghost" 
        size="icon" 
        className="md:hidden"
        aria-label="Toggle Menu"
        data-toggle-nav
      >
        <Menu className="w-7 h-7 text-[#1A2980]" />
      </Button>

      <!-- Mobile Menu Overlay -->
      <div 
        class="fixed inset-0 bg-background/80 backdrop-blur-sm z-50 hidden" 
        data-nav-overlay
      >
        <!-- Mobile Menu Panel -->
        <div 
          class="fixed inset-y-0 right-0 w-3/4 max-w-sm bg-background border-l shadow-lg transform translate-x-full transition-transform duration-300 ease-in-out"
          data-nav-panel
        >
          <div class="flex flex-col p-6 space-y-4">
            {navItems.map(({ href, label }) => (
              <a 
                href={href}
                class={`
                  text-lg font-medium py-2
                  ${isCurrentPage(href) 
                    ? 'text-primary'
                    : 'text-muted-foreground'
                  }
                `}
              >
                {label}
              </a>
            ))}
          </div>
        </div>
      </div>
    </div>
  </div>
</nav>

<script>
  // Mobile menu functionality
  const toggleButton = document.querySelector('[data-toggle-nav]');
  const overlay = document.querySelector('[data-nav-overlay]');
  const panel = document.querySelector('[data-nav-panel]');
  let isOpen = false;

  function toggleMenu() {
    isOpen = !isOpen;
    
    if (isOpen) {
      overlay?.classList.remove('hidden');
      // Wait a frame before adding translate-x-0 to trigger animation
      requestAnimationFrame(() => {
        panel?.classList.remove('translate-x-full');
      });
    } else {
      panel?.classList.add('translate-x-full');
      // Wait for animation to finish before hiding overlay
      setTimeout(() => {
        overlay?.classList.add('hidden');
      }, 300);
    }
  }

  toggleButton?.addEventListener('click', toggleMenu);

  // Close menu when clicking overlay
  overlay?.addEventListener('click', (e) => {
    if (e.target === overlay) {
      toggleMenu();
    }
  });

  // Close menu on escape key
  document.addEventListener('keydown', (e) => {
    if (e.key === 'Escape' && isOpen) {
      toggleMenu();
    }
  });
</script>

<style>
  /* Prevent body scroll when menu is open */
  :global(body.menu-open) {
    overflow: hidden;
  }
</style> 